
--------- > FUNCTIONS 

The fundamental building block of real world JS applications are functions.

They are one of the most essential concepts in the language 

- SO WHAT ACTUALLY ARE FUNCTIONS? 
    IN THE MOST SIMPLE FORM A FUNCTION IS SIMPLY A PIECE OF CODE THAT WE CAN REUSE OVER AND OVER AGAIN IN OUR CODE.
    So it's a little bit like a variable but for whole chunks of code.
    So remember, a variable holds value BUT A FUNCTION CAN HOLD ONE OR MORE COMPLETE LINES OF CODE  


----> CREATING A FUNCTION : 

function logger() {
    console.log('My name is Larissa');
}

CALLING/ RUNNING / INVOKING THE FUNCTION: 

logger();

--- USUALLY, WHEN WE WRITE A FUNCTION WE ALSO PASS DATA INTO A FUNCTION 
AND ADDITIONALLY, A FUNCTION CAN ALSO RETURN DATA AS WELL, WHICH MEANS TO GIVE US DATA BACK THAT WE CAN THEN USE FOR SOMETHING
ELSE IN THE PROGRAM 

SO A FUNCTION CANNOT ONLY REUSE A PIECE OF CODE LIKE THE FUNCTION LOGGER 
BUT IT CAN ALSO RECEIVE DATA AND RETURN DATA BACK. 

IMAGINE A FUNCTION LIKE A FOOD PROCESSOR 
WE CAN ALSO SPECIFY SOMETHING CALLED PARAMETERS 

AND PARAMETERS ARE LIKE VARIABLES THAT ARE SPECIFIC ONLY TO THIS FUNCTION 
AND THEY WILL GET DEFINED ONCE WE CALL THE FUNCTION

function foodProcessor(apples, oranges) { 

}

and again these two parameters WILL GET DEFINED ONCE THE FUNCTION IS CALLED!!!
AND THEY REPRESENT THE INPUT DATA OF THIS FUNCTION!!  

function foodProcessor(apples, oranges) { 
    console.log(apples, oranges);
    const = `Juice with ${apples} apples and ${oranges} oranges.Â´;
    return juice;
}

we want to simulate that this fruit processor produces a juice out of the apples and oranges that we give it.

THE RETURN KEYWORD WE CAN RETURN ANY VALUE FROM THE FUNCTION 

---- THE ACTUAL VALUES OF THE PARAMETERS ARE CALLED ARGUMENTS!!!!
ex: foodProcessor(5,0) - ACTUAL VALUES OF THE PARAMETERS 

A FUNCTION DOESNT NEED TO RETURN ANYTHING OR HAVE ANY PARAMETERS 

- A FUNCTION WITHOUT THE PARAMETERS AND WITHOUTA RETURN WE REALLY ONLY USE WHEN THERE'S A BLOCK OF CODE THAT WE WANT TO REUSE 
OVER AND OVER AGAIN

--> THE LOGGER FUNCTION DOES NOT RETURN ANYTHING.
ALL IT DOES IS TO LOG SOMETHING TO THE CONSOLE BUT THAT HAS NOTHING TO DO WITH RETURNING A VALUE!!!!!!!
THE LOGGER FUNCTION ONLY PRINT A MESSAGE TO THE DEVELOPER CONSOLE.

---- SO FUNCTIONS ALLOW US TO WRITE MORE MAINTAINABLE CODE BECAUSE WITH FUNCTIONS 
WE CAN CREATE REUSABLE CHUNCKS OF CODE INSTEAD OF HAVING TO MANUALLY WRITE THE SAME CODE OVER AND OVER AGAIN.
DON'T REPEAT YOURSELF OR DRY!!!!!!!!!!!!!!!! FUNCTIONS ARE PERFECT FOR IMPLEMENTING DRY CODE 


OBS:: CONSOLE.LOG IS A BUILT IN FUNCTIONS THAT WE JUST CALL IT LIKE OUR OWN FUNCTIONS 
OBS2:: ANOTHER BUILT IN FUNCTION >>>> Number('12') -> TURN A STRING INTO A NUMBER 